// Code generated by MockGen. DO NOT EDIT.
// Source: machine_series_detector.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMachineSeriesDetector is a mock of MachineSeriesDetector interface.
type MockMachineSeriesDetector struct {
	ctrl     *gomock.Controller
	recorder *MockMachineSeriesDetectorMockRecorder
}

// MockMachineSeriesDetectorMockRecorder is the mock recorder for MockMachineSeriesDetector.
type MockMachineSeriesDetectorMockRecorder struct {
	mock *MockMachineSeriesDetector
}

// NewMockMachineSeriesDetector creates a new mock instance.
func NewMockMachineSeriesDetector(ctrl *gomock.Controller) *MockMachineSeriesDetector {
	mock := &MockMachineSeriesDetector{ctrl: ctrl}
	mock.recorder = &MockMachineSeriesDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMachineSeriesDetector) EXPECT() *MockMachineSeriesDetectorMockRecorder {
	return m.recorder
}

// Detect mocks base method.
func (m *MockMachineSeriesDetector) Detect(project, zone string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Detect", project, zone)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Detect indicates an expected call of Detect.
func (mr *MockMachineSeriesDetectorMockRecorder) Detect(project, zone interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Detect", reflect.TypeOf((*MockMachineSeriesDetector)(nil).Detect), project, zone)
}
